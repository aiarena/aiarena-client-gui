name: "test-on-pr"
on: 
  pull_request:
  push:
    branches:
      - dev
      - master

jobs:
  test-tauri:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v2
    - name: setup node
      uses: actions/setup-node@v1
      with:
        node-version: 12
    - name: install Rust stable
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: install webkit2gtk (ubuntu only)
      if: matrix.platform == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y webkit2gtk-4.0
        
    - name: Cache cargo registry
      uses: actions/cache@v2
      with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-${{ steps.rustup.outputs.rustc_hash }}-dev-registry-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo index
      uses: actions/cache@v2
      with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-${{ steps.rustup.outputs.rustc_hash }}-dev-index-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache build paths
      uses: actions/cache@v2
      with:
          path: |
            src-tauri/target
            backend/target
          key: ${{ runner.os }}-${{ steps.rustup.outputs.rustc_hash }}-dev-target-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache node modules
      uses: actions/cache@v2
      env:
          cache-name: cache-node-modules
      with:
          path: "node_modules"
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
    - name: install app dependencies and build it
      run: yarn && yarn build
    - name: run rust tests
      env:
        RUST_BACKTRACE: 1
        AIARENATOKEN: ${{ secrets.AIARENATOKEN }}
      run: cd backend && cargo test -- --nocapture
    - uses: tauri-apps/tauri-action@v0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
        TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        
    - name: Archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: artifacts
        path: |
          ${{ github.workspace }}/src-tauri/target/release/bundle/**/*.AppImage.tar.gz
          ${{ github.workspace }}/src-tauri/target/release/bundle/**/*.AppImage.tar.gz.sig
          ${{ github.workspace }}/src-tauri/target/release/bundle/**/*.deb
          ${{ github.workspace }}/src-tauri/target/release/bundle/**/*.app.tar.gz
          ${{ github.workspace }}/src-tauri/target/release/bundle/**/*.app.tar.gz.sig
          ${{ github.workspace }}/src-tauri/target/release/bundle/**/*.msi.zip
          ${{ github.workspace }}/src-tauri/target/release/bundle/**/*.msi.zip.sig
          ${{ github.workspace }}/src-tauri/target/release/bundle/**/*.msi
