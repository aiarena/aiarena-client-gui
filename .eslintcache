[{"C:\\Users\\danie\\CLionProjects\\aiarena-client-GUI\\src\\index.js":"1","C:\\Users\\danie\\CLionProjects\\aiarena-client-GUI\\src\\App.js":"2","C:\\Users\\danie\\CLionProjects\\aiarena-client-GUI\\src\\serviceWorker.js":"3","C:\\Users\\danie\\CLionProjects\\aiarena-client-GUI\\src\\Settings.js":"4","C:\\Users\\danie\\CLionProjects\\aiarena-client-GUI\\src\\Home.js":"5"},{"size":486,"mtime":1619257904257,"results":"6","hashOfConfig":"7"},{"size":1432,"mtime":1619278819213,"results":"8","hashOfConfig":"7"},{"size":5140,"mtime":1617797181020,"results":"9","hashOfConfig":"7"},{"size":8263,"mtime":1619521513920,"results":"10","hashOfConfig":"7"},{"size":6271,"mtime":1619518978585,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"ry8oe7",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"C:\\Users\\danie\\CLionProjects\\aiarena-client-GUI\\src\\index.js",[],["24","25"],"C:\\Users\\danie\\CLionProjects\\aiarena-client-GUI\\src\\App.js",[],"C:\\Users\\danie\\CLionProjects\\aiarena-client-GUI\\src\\serviceWorker.js",[],"C:\\Users\\danie\\CLionProjects\\aiarena-client-GUI\\src\\Settings.js",[],"C:\\Users\\danie\\CLionProjects\\aiarena-client-GUI\\src\\Home.js",["26"],"import React, {Component} from \"react\";\r\nimport Select from 'react-select'\r\nimport Button from 'react-bootstrap/Button'\r\nimport * as bs from 'bootstrap/dist/css/bootstrap.css';\r\n\r\n// const axios = require('axios');\r\nimport axios from \"axios\";\r\nfunction changeToDictionary(v) {\r\n    return {value: v, label: v}\r\n}\r\n\r\nconst customStyles = {\r\n\r\n    option: (provided, state) => ({\r\n        ...provided,\r\n        background: 'white',\r\n        borderBottom: '1px dotted pink',\r\n        color: state.isSelected ? 'green' : 'black',\r\n        padding: 20,\r\n    }),\r\n    // control: () => ({\r\n    //     // none of react-select's styles are passed to <Control />\r\n    //     width: 200,\r\n    // }),\r\n    singleValue: (provided, state) => {\r\n        const opacity = state.isDisabled ? 0.5 : 1;\r\n        const transition = 'opacity 300ms';\r\n\r\n        return {...provided, opacity, transition};\r\n    }\r\n}\r\n\r\nclass Home extends Component {\r\n    constructor() {\r\n        super();\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.loadAIArenaBots = this.loadAIArenaBots.bind(this);\r\n    }\r\n\r\n    state = {\r\n        bots: [],\r\n        maps: [],\r\n        iterations_id: 1,\r\n        ai_arena_bots_loaded: false\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        let obj = {};\r\n        obj[event.target.name] = event.target.value;\r\n        this.setState(obj);\r\n    }\r\n\r\n    componentDidMount() {\r\n        // axios.defaults.url\r\n        axios.get(\"http://127.0.0.1:8082/get_bots\",)\r\n            .then((data) => {\r\n\r\n                let obj = {bots: []};\r\n                data.data.Bots.forEach(value => {\r\n                    obj.bots.push(changeToDictionary(value));\r\n                });\r\n                this.setState(obj);\r\n\r\n            }).catch(console.log);\r\n        axios.get(\"http://127.0.0.1:8082/get_maps\").then((data) => {\r\n            let obj = {maps: []};\r\n            data.data.Maps.forEach(value => {\r\n                obj.maps.push(changeToDictionary(value));\r\n            });\r\n            this.setState(obj);\r\n        });\r\n    }\r\n    loadAIArenaBots(){\r\n        if (!this.state.ai_arena_bots_loaded) {\r\n            axios.get(\"http://127.0.0.1:8082/get_arena_bots\").then((data) =>{\r\n\r\n                let obj = {'bots': this.state.bots};\r\n                console.log(obj);\r\n                let results = data.data.results;\r\n                for (var i =0; i < data.data.count; i++){\r\n                    console.log(i);\r\n                    obj.bots.push(changeToDictionary(results[i].name + ' (AI-Arena)'));\r\n                    console.log(results[i].name + ' (AI-Arena)');\r\n                }\r\n                this.setState(obj);\r\n                console.log(obj);\r\n                let obj2 = {'ai_arena_bots_loaded': true};\r\n                this.setState(obj2);\r\n            }).catch(reason => {console.log(reason);});\r\n        }\r\n    }\r\n    handleSubmit(event) {\r\n        console.log(event);\r\n        event.preventDefault();\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"middle-pad\">\r\n\r\n                <main>\r\n                    <h1>Home</h1>\r\n                    <br/>\r\n                    <label className=\"switch\">\r\n                        <Button hidden={this.state.ai_arena_bots_loaded} onClick={this.loadAIArenaBots} variant=\"outline-light\">Load AI-Arena Bots (requires API Token in Settings)</Button>\r\n                        <span className=\"slider round\"/>\r\n                    </label><br/>\r\n                    <form style={{textAlign: 'left', width: '50%'}} id=\"my_form_id\" onSubmit={this.handleSubmit}>\r\n                        <h3 style={{textAlign: 'left'}}>Bot 1: </h3>\r\n                        <Select name=\"Bot1\" label=\"Bot 1\" options={this.state.bots} isMulti styles={customStyles}/>\r\n                        <br/>\r\n                        <h3 style={{textAlign: 'left'}}>Bot 2: </h3>\r\n                        <Select name=\"Bot2\" label=\"Bot 2\" options={this.state.bots} isMulti styles={customStyles}/>\r\n                        <br/>\r\n                        <h3 style={{textAlign: 'left'}}>Map:</h3>\r\n                        <Select id=\"Map\" label=\"Map\" options={this.state.maps} isMulti styles={customStyles}/>\r\n                        <br/>\r\n                        <h3 style={{textAlign: 'left'}}>Iterations: </h3>\r\n                        <div style={{textAlign: 'left'}}>\r\n                            <input type=\"number\" min={1} step={1} value={this.state.iterations_id}\r\n                                   name=\"iterations_id\" onChange={this.handleInputChange}/>\r\n                        </div>\r\n                        <br/>\r\n                        <div style={{textAlign: 'left'}}>\r\n                            <label>Visualize: </label><br/>\r\n                            <input id=\"visualize_id\" type=\"checkbox\" name=\"visualize\"/>\r\n                            <br/>\r\n                            <label>Realtime: </label><br/>\r\n                            <input id=\"realtime_id\" type=\"checkbox\" name=\"realtime\"/>\r\n\r\n                            <span/>\r\n                            <br/><br/>\r\n\r\n                            <Button type=\"submit\" variant={\"outline-light\"} block>Play</Button>\r\n\r\n\r\n                        </div>\r\n                        <div id='subscribe'>\r\n                        </div>\r\n                        <br/><br/>\r\n                    </form>\r\n                    {/*<div id=\"watch_id\">*/}\r\n                    {/*    <h1>Live Feed</h1>*/}\r\n                    {/*    <a href=\"/watch\">Watch</a><br/><br/><br/>*/}\r\n                    {/*</div>*/}\r\n                    <div className='Results'>\r\n                        <h2>Results</h2>\r\n                        <Button id=\"clear_results\" variant={\"outline-light\"} >Clear Results</Button>\r\n                        <Button id=\"refresh_results_id\" variant={\"outline-light\"} >Refresh</Button>\r\n                        <br/>\r\n                        <body onLoad=\"generateDynamicTable()\">\r\n                        <div id=\"myResults\">\r\n                            <p/>\r\n                        </div>\r\n                        </body>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":4,"column":13,"nodeType":"33","messageId":"34","endLine":4,"endColumn":15},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'bs' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]